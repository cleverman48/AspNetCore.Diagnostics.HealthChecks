namespace HealthChecks.Aws.SystemsManager
{
    public class SystemsManagerHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public SystemsManagerHealthCheck(HealthChecks.Aws.SystemsManager.SystemsManagerOptions systemsManagerOptions) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class SystemsManagerOptions
    {
        public SystemsManagerOptions() { }
        public Amazon.Runtime.AWSCredentials? Credentials { get; set; }
        public Amazon.RegionEndpoint? RegionEndpoint { get; set; }
        public HealthChecks.Aws.SystemsManager.SystemsManagerOptions AddParameter(string parameter) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class SystemsManagerHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddSystemsManager(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Action<HealthChecks.Aws.SystemsManager.SystemsManagerOptions>? setup, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}