namespace HealthChecks.Gcp.CloudFirestore
{
    public class CloudFirestoreHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public CloudFirestoreHealthCheck(HealthChecks.Gcp.CloudFirestore.CloudFirestoreOptions cloudFirestoreOptions) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class CloudFirestoreOptions
    {
        public CloudFirestoreOptions() { }
        public Google.Cloud.Firestore.FirestoreDb FirestoreDatabase { get; set; }
        public string[]? RequiredCollections { get; set; }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class CloudFirestoreHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddCloudFirestore(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Action<HealthChecks.Gcp.CloudFirestore.CloudFirestoreOptions>? setup, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}