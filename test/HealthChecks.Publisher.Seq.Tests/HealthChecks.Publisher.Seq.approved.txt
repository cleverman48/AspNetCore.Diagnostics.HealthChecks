namespace HealthChecks.Publisher.Seq
{
    public class RawEvent
    {
        public RawEvent() { }
        public string Level { get; set; }
        public string MessageTemplate { get; set; }
        public System.Collections.Generic.Dictionary<string, object?> Properties { get; set; }
        public string RawReport { get; set; }
        public System.DateTimeOffset Timestamp { get; set; }
    }
    public class RawEvents
    {
        public RawEvents() { }
        public HealthChecks.Publisher.Seq.RawEvent[] Events { get; set; }
    }
    public enum SeqInputLevel
    {
        Information = 0,
        Debug = 1,
        Verbose = 2,
        Warning = 3,
        Error = 4,
        Fatal = 5,
    }
    public class SeqPublisher : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheckPublisher
    {
        public SeqPublisher(System.Func<System.Net.Http.HttpClient> httpClientFactory, Microsoft.Extensions.DependencyInjection.SeqOptions options) { }
        public System.Threading.Tasks.Task PublishAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport report, System.Threading.CancellationToken cancellationToken) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class SeqHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddSeqPublisher(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Action<Microsoft.Extensions.DependencyInjection.SeqOptions>? setup, string? name = null) { }
    }
    public class SeqOptions
    {
        public SeqOptions() { }
        public string? ApiKey { get; set; }
        public System.Action<HealthChecks.Publisher.Seq.RawEvents>? Configure { get; set; }
        public HealthChecks.Publisher.Seq.SeqInputLevel DefaultInputLevel { get; set; }
        public string Endpoint { get; set; }
    }
}